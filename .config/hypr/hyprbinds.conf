
###################
### KEYBINDINGS ###
###################

# See https://wiki.hyprland.org/Configuring/Keywords/
$mainMod = SUPER # Sets "Windows" key as main modifier

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = CTRL_ALT, T, exec, $terminal
bind = $mainMod, Q, killactive,
bind = ALT, F4, killactive,
# bind = $mainMod, delete, exit,
bind = $mainMod, E, exec, $fileManager
bind = $mainMod, V, togglefloating,
bind = ALT, space, exec, hyprctl dispatch fullscreenstate 0 & $menu # exit fullscreen before opening the menu
# bind = $mainMod, SUPER_L, exec, hyprctl dispatch fullscreenstate 0 & $menu # exit fullscreen before opening the menu
bind = ALT SHIFT, space, exec, $menu window
bind = $mainMod, P, pseudo, # dwindle
bind = $mainMod, J, togglesplit, # dwindle
bind = $mainMod, F, fullscreen,
gesture = 4, up, fullscreen
gesture = 4, down, fullscreen
bind = ALT, tab, cyclenext,
bind = $mainMod, G, togglegroup,

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10
# binde: repeats when held
# m +- 1 => only current monitor excluding empty workspaces
# r +- 1 => only current monitor including empty workspaces
# e +- 1      => all monitors excluding empty workspaces
# <none> +- 1 => all monitors including empty workspaces
binde = CTRL_ALT, right, workspace, r+1 # move to next workspace (including empty ones)
binde = CTRL_ALT SHIFT, right, movetoworkspace, r+1 # move active window to next workspace (combo with CTRL_ALT + right)
gesture = 3, right, dispatcher, workspace, m+1 # move to next workspace (including empty ones)
binde = CTRL_ALT, left, workspace, r-1 # move to previous workspace (including empty ones)
binde = CTRL_ALT SHIFT, left, movetoworkspace, r-1 # move active window to previous workspace (combo with CTRL_ALT + left)
gesture = 3, left, dispatcher, workspace, m-1 # move to previous workspace (including empty ones)
#bind = CTRL_ALT, L, workspace, e+1 # move to next active workspace
#bind = CTRL_ALT, H, workspace, e-1 # move to previous active workspace
bind = $mainMod, backslash, workspace, previous # move to last workspace

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Manipulate windows within workspace with mainMod + SHIFT + arrow keys
bind = $mainMod SHIFT, left, swapwindow, l
bind = $mainMod SHIFT, right, swapwindow, r
bind = $mainMod SHIFT, up, swapwindow, u
bind = $mainMod SHIFT, down, swapwindow, d

# Lock screen
bind = $mainMod, L, exec, loginctl lock-session

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
bindm = $mainMod SHIFT, mouse:272, resizewindow # useful on laptop where right click is unconfortable
bindm = $mainMod SHIFT, mouse:273, resizewindow # useful on desktop cause i got used to press SHIFT as well on laptop lmao

######################
# SUBMAP - EDIT MODE #
######################

# will switch to a submap called resize
bind = $mainMod SHIFT, RETURN, submap, 󰏫 Edit

# will start a submap called "resize"
submap = 󰏫 Edit

# sets repeatable binds for resizing the active window
binde = , right, resizeactive, 10 0
binde = , left, resizeactive, -10 0
binde = , up, resizeactive, 0 -10
binde = , down, resizeactive, 0 10
# faster resizing with SHIFT
binde = SHIFT, right, resizeactive, 30 0
binde = SHIFT, left, resizeactive, -30 0
binde = SHIFT, up, resizeactive, 0 -30
binde = SHIFT, down, resizeactive, 0 30

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d

# Move active window to a specific workspace with number keys (follow the window)
bind = , 1, movetoworkspace, 1
bind = , 2, movetoworkspace, 2
bind = , 3, movetoworkspace, 3
bind = , 4, movetoworkspace, 4
bind = , 5, movetoworkspace, 5
bind = , 6, movetoworkspace, 6
bind = , 7, movetoworkspace, 7
bind = , 8, movetoworkspace, 8
bind = , 9, movetoworkspace, 9
bind = , 0, movetoworkspace, 10

# Move active window to a specific workspace with number keys (stay on the current workspace)
bind = SHIFT, 1, movetoworkspacesilent, 1
bind = SHIFT, 2, movetoworkspacesilent, 2
bind = SHIFT, 3, movetoworkspacesilent, 3
bind = SHIFT, 4, movetoworkspacesilent, 4
bind = SHIFT, 5, movetoworkspacesilent, 5
bind = SHIFT, 6, movetoworkspacesilent, 6
bind = SHIFT, 7, movetoworkspacesilent, 7
bind = SHIFT, 8, movetoworkspacesilent, 8
bind = SHIFT, 9, movetoworkspacesilent, 9
bind = SHIFT, 0, movetoworkspacesilent, 10

# use reset to go back to the global submap
bind = , escape, submap, reset
bind = , RETURN, submap, reset
bind = , catchall, submap, reset

# will reset the submap, which will return to the global submap
submap = reset

#############################
# END OF SUBMAP - EDIT MODE #
#############################

#######################
# SUBMAP - AUDIO MODE #
#######################

# will switch to a submap called resize
bind = $mainMod SHIFT, XF86AudioPlay, submap,  Audio

# will start a submap called "resize"
submap =  Audio

# set out volume
bind = , 1, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.1
bind = , 2, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.2
bind = , 3, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.3
bind = , 4, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.4
bind = , 5, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.5
bind = , 6, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.6
bind = , 7, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.7
bind = , 8, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.8
bind = , 9, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.9
bind = , 0, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 0.0

# set mic volume
bind = , q, exec, wpctl set-volume @DEFAULT_SOURCE@ 0.1
bind = , w, exec, wpctl set-volume @DEFAULT_SOURCE@ 0.2
bind = , e, exec, wpctl set-volume @DEFAULT_SOURCE@ 0.3
bind = , r, exec, wpctl set-volume @DEFAULT_SOURCE@ 0.4
bind = , t, exec, wpctl set-volume @DEFAULT_SOURCE@ 0.5
bind = , y, exec, wpctl set-volume @DEFAULT_SOURCE@ 0.6
bind = , u, exec, wpctl set-volume @DEFAULT_SOURCE@ 0.7
bind = , i, exec, wpctl set-volume @DEFAULT_SOURCE@ 0.8
bind = , o, exec, wpctl set-volume @DEFAULT_SOURCE@ 0.9
bind = , p, exec, wpctl set-volume @DEFAULT_SOURCE@ 0.0

binde = , right, exec, playerctl next
binde = , left, exec, playerctl previous

# use reset to go back to the global submap
bind = , escape, submap, reset
bind = , RETURN, submap, reset
bind = , catchall, submap, reset

# will reset the submap, which will return to the global submap
submap = reset

##############################
# END OF SUBMAP - AUDIO MODE #
##############################

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%-
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bind = $mainMod, O, exec, ~/.config/waybar/scripts/audioOutputSwitcher.py
bind = $mainMod, I, exec, ~/.config/hypr/scripts/micSwitcher.py
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl s 10%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl s 10%-

# Bluetooth
bind = $mainMod, B, exec, $terminal --class="waybar.popup.term" -e bluetuith

# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous

bind = $mainMod, XF86AudioRaiseVolume, exec, playerctl next # alternative for pc with no next button
bind = $mainMod, XF86AudioLowerVolume, exec, playerctl previous # alternative for pc with no previous button

# screenshot
bind = SHIFT, Print, exec, hyprshot -z -m window -o ~/Pictures/Screenshots/ # screenshot of a window
bind = , Print, exec, hyprshot -z -m region -o ~/Pictures/Screenshots/ # screenshot of a region


# PLUGINS
bind = SUPER, TAB, hyprexpo:expo, toggle # can be: toggle, off/disable or on/enable
gesture = 3, up, dispatcher, hyprexpo:expo, on
gesture = 3, down, dispatcher, hyprexpo:expo, off

# APPS
bind = CTRL_ALT, K, exec, org.keepassxc.KeePassXC # desktop
bind = CTRL_ALT, K, exec, keepassxc # laptop
bind = CTRL_ALT, B, exec, zen-browser
bind = $mainMod, XF86AudioPlay, exec, feishin

# Utilities
bind = $mainMod SHIFT, W, exec, ~/.config/hypr/scripts/restart-waybar.sh & swaync-client -rs # restart waybar and sway
bind = $mainMod SHIFT, D, exec, ~/.config/hypr/scripts/setWaybarDark.sh  # waybar dark theme
bind = $mainMod, N, exec, swaync-client -t -sw
bind = $mainMod SHIFT, N, exec, swaync-client -d -sw
bind = $mainMod SHIFT, C, exec, hyprctl dispatch workspace 6
bind = CTRL_ALT, delete, exec, wlogout
bind = $mainMod, Period, exec, ~/.config/rofi/scripts/emoji-picker
bind = $mainMod, Comma, exec, cliphist list | $menu -dmenu | cliphist decode | wl-copy

# bindit = $mainMod, SUPER_L, exec, pkill -SIGUSR1 waybar
# bindirt = $mainMod, SUPER_L, exec, pkill -SIGUSR1 waybar
# bind = $mainMod, B, exec, pkill -SIGUSR1 waybar
